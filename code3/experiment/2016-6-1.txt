#日期：2016年6月1日

实验记录：

1，模型： 无边界检测，bagging训练样本，构造多个决策树，之后得到一个准线性核矩阵，生成一个QLSVM分类器。

2，对比分类器： RBFSVM , LinearSVM

3，数据集：sonar，特点RBF会过拟合的很厉害，甚至没有LinearSVM好。

4，实验总结：
	这个数据集三个SVM分类器效果都差不多，QL效果最好。
	主要使用大量的数和0.2左右的max_feautures，以及使用修改后的代价函数训练。
	在这个数据集上可以得到的结论是：
	这里我发现对得到的RList进行聚类，聚类个数5-9成avg_num_R，效果最好。
	QLSVM对C不敏感，且lambda值高的时候可以得到更为稀疏的核矩阵。


5，实验结果：
	1）RBF精度在cv测试中，精度最低，说明过拟合的很厉害
	RBFSVM： Model with rank: 1
		Model with rank: 1
		Mean validation score: 0.625 (std: 0.068)
		Parameters: {'kernel': 'rbf', 'C': 431.6158130709299, 'gamma': 0.0008738498205255017}

		Model with rank: 2
		Mean validation score: 0.620 (std: 0.062)
		Parameters: {'kernel': 'rbf', 'C': 695.44978873017, 'gamma': 0.0007890159555224388}

		Model with rank: 3
		Mean validation score: 0.620 (std: 0.074)
		Parameters: {'kernel': 'rbf', 'C': 496.6656295352011, 'gamma': 0.0010827899559307356}

		Model with rank: 4
		Mean validation score: 0.620 (std: 0.074)
		Parameters: {'kernel': 'rbf', 'C': 1260.6382070984287, 'gamma': 0.0011408146607448473}

		Model with rank: 5
		Mean validation score: 0.606 (std: 0.080)
		Parameters: {'kernel': 'rbf', 'C': 704.1551728402653, 'gamma': 0.001355763732511879}

	2）Linear精度在cv测试中表现出了比RBF更好的泛化能力。
		Model with rank: 1
		Mean validation score: 0.649 (std: 0.081)
		Parameters: {'C': 657.6936871911599}

		Model with rank: 2
		Mean validation score: 0.649 (std: 0.081)
		Parameters: {'C': 32.50012225336726}

		Model with rank: 3
		Mean validation score: 0.649 (std: 0.081)
		Parameters: {'C': 4858.777896167321}

		Model with rank: 4
		Mean validation score: 0.649 (std: 0.081)
		Parameters: {'C': 1546.5766451310446}

		Model with rank: 5
		Mean validation score: 0.649 (std: 0.081)
		Parameters: {'C': 292.3343587184465}

	3）QLinear精度在cv测试中，最好，QL的好处是对C不敏感.
		Model with rank: 1
		Mean validation score: 0.678 (std: 0.023)
		Parameters: {'kernel': 'precomputed', 'C': 0.36231196740955723}

		Model with rank: 2
		Mean validation score: 0.673 (std: 0.016)
		Parameters: {'kernel': 'precomputed', 'C': 0.7786592702850007}


		Model with rank: 1
		Mean validation score: 0.673 (std: 0.016)
		Parameters: {'kernel': 'precomputed', 'C': 0.897103331569212}

		Model with rank: 2
		Mean validation score: 0.673 (std: 0.016)
		Parameters: {'kernel': 'precomputed', 'C': 0.8453133979530195}

		Model with rank: 3
		Mean validation score: 0.668 (std: 0.010)
		Parameters: {'kernel': 'precomputed', 'C': 1.6948934249826213}

		Model with rank: 4
		Mean validation score: 0.668 (std: 0.033)
		Parameters: {'kernel': 'precomputed', 'C': 0.5005128230418076}

		Model with rank: 5
		Mean validation score: 0.663 (std: 0.004)
		Parameters: {'kernel': 'precomputed', 'C': 1.7239539103925585}
