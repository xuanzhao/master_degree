#日期：2016年6月3日

实验记录：

1，模型： 无边界检测，bagging训练样本，构造多个决策树，之后得到一个准线性核矩阵，生成一个QLSVM分类器。

2，对比分类器： RBFSVM , LinearSVM

3，数据集：glass，有8类数据，看作是不平衡数据集。

4，实验总结：
	这个数据集三个SVM分类器效果都差不多，RBF和QLSVM差不多。这个数据集核的个数在10左右比较好。
	主要使用大量的树和0.2左右的max_feautures，以及使用修改后的代价函数训练。
	在这个数据集上可以得到的结论是：
	通过一直试聚类的百分比，我发现对得到的RList进行聚类，聚类个数1-9成avg_num_R，都有可能得到好的结果。
	好的核的个数跟数据相关，如果数据需要的核少，则浅的树就可以学的比较好。
	QLSVM对C不敏感，且lambda值高的时候可以得到更为稀疏的核矩阵。


5，实验结果：glass(214,8),label=8,类1为1（70个），其他为0（144个），
			 CV(shuffle=True)=5
	1）RBF精度在cv测试中，精度最低，说明过拟合的很厉害
		Model with rank: 1
		Mean validation score: 0.850 (std: 0.058)
		Parameters: {'kernel': 'rbf', 'C': 86.8230723382427, 'gamma': 0.0863468898091713}

		Model with rank: 2
		Mean validation score: 0.850 (std: 0.058)
		Parameters: {'kernel': 'rbf', 'C': 580.1706640942285, 'gamma': 0.06300117657642305}

		Model with rank: 3
		Mean validation score: 0.850 (std: 0.054)
		Parameters: {'kernel': 'rbf', 'C': 366.84156378489223, 'gamma': 0.06681457931791712}

		Model with rank: 4
		Mean validation score: 0.850 (std: 0.054)
		Parameters: {'kernel': 'rbf', 'C': 352.1110327579989, 'gamma': 0.0691276668547136}

		Model with rank: 5
		Mean validation score: 0.850 (std: 0.067)
		Parameters: {'kernel': 'rbf', 'C': 69.71936748706285, 'gamma': 0.15681265892878804}

	2）Linear精度在cv测试中表现出了比RBF更好的泛化能力。
		Model with rank: 1
		Mean validation score: 0.776 (std: 0.039)
		Parameters: {'kernel': 'linear', 'C': 309.4734325197795}

		Model with rank: 2
		Mean validation score: 0.776 (std: 0.039)
		Parameters: {'kernel': 'linear', 'C': 306.00818822819423}

		Model with rank: 3
		Mean validation score: 0.776 (std: 0.039)
		Parameters: {'kernel': 'linear', 'C': 321.82583744540017}

		Model with rank: 4
		Mean validation score: 0.776 (std: 0.039)
		Parameters: {'kernel': 'linear', 'C': 322.42786630476974}

		Model with rank: 5
		Mean validation score: 0.776 (std: 0.039)
		Parameters: {'kernel': 'linear', 'C': 320.62208005318297}

	3）QLinear精度在cv测试中，最好，QL的好处是对C不敏感.

		Model with rank: 1
		Mean validation score: 0.851 (std: 0.054)
		Parameters: {'kernel': 'precomputed', 'C': 4448.849308865498}

		Model with rank: 2
		Mean validation score: 0.851 (std: 0.054)
		Parameters: {'kernel': 'precomputed', 'C': 4468.16406747459}

		Model with rank: 3
		Mean validation score: 0.851 (std: 0.057)
		Parameters: {'kernel': 'precomputed', 'C': 2467.5816193115597}

		Model with rank: 4
		Mean validation score: 0.851 (std: 0.057)
		Parameters: {'kernel': 'precomputed', 'C': 2562.1187119181527}

		Model with rank: 5
		Mean validation score: 0.851 (std: 0.057)
		Parameters: {'kernel': 'precomputed', 'C': 2590.23651580767}