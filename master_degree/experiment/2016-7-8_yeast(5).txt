#日期：2016年7月8日

实验记录：

1，模型： 无边界检测，bagging训练样本，构造多个决策树，之后得到一个准线性核矩阵，生成一个QLSVM分类器。

2，对比分类器： RBFSVM , LinearSVM

3，数据集：yeast

4，实验总结：

5，实验结果： CV=None(shuffle=True), yeast=((625L, 436L)),
			  pos(class=5)=41,neg(others)=584

	1）RBF
	precision_score : 0.571428571429
	recall_score : 0.166666666667
	f1_score : 0.258064516129

	precision_score : 0.5
	recall_score : 0.375
	f1_score : 0.428571428571

	precision_score : 0.461538461538
	recall_score : 0.25
	f1_score : 0.324324324324

	2）Linear
	precision_score : 0.47619047619
	recall_score : 0.416666666667
	f1_score : 0.444444444444

	precision_score : 0.384615384615
	recall_score : 0.416666666667
	f1_score : 0.4

	3）QLinear
	myFore = my_RF_QLSVM.RF_QLSVM_clf(n_trees=30, 
	                    leafType='LogicReg', errType='lseErr_regul',
	                    max_depth=None, min_samples_split=5,
	                    max_features='log2',bootstrap_data=True)
	k=1
 	X_delta = X - np.mean(X, axis=0)
	{0: array([ 7.        ,  0.39285714,  0.45833333,  0.42307692]),
	 1: array([ 11.        ,   0.34285714,   0.5       ,   0.40677966]),
	 2: array([ 15.        ,   0.34285714,   0.5       ,   0.40677966]),
	 3: array([ 18.        ,   0.33333333,   0.5       ,   0.4       ]),
	 4: array([ 22.        ,   0.39285714,   0.45833333,   0.42307692]),
	 5: array([ 26.        ,   0.34285714,   0.5       ,   0.40677966]),
	 6: array([ 30.        ,   0.33333333,   0.5       ,   0.4       ]),
	 7: array([ 33.        ,   0.39285714,   0.45833333,   0.42307692]),
	 8: array([ 37.        ,   0.34285714,   0.5       ,   0.40677966]),
	 9: array([ 41.        ,   0.33333333,   0.5       ,   0.4       ]),
	 10: array([ 45.        ,   0.33333333,   0.5       ,   0.4       ]),
	 11: array([ 48.        ,   0.34285714,   0.5       ,   0.40677966]),
	 12: array([ 52.        ,   0.39285714,   0.45833333,   0.42307692]),
	 13: array([ 56.        ,   0.39285714,   0.45833333,   0.42307692]),
	 14: array([ 60.        ,   0.37037037,   0.41666667,   0.39215686]),
	 15: array([ 63.        ,   0.34285714,   0.5       ,   0.40677966])}


	 {0: array([ 7.        ,  0.47619048,  0.41666667,  0.44444444]),
	 1: array([ 11.        ,   0.47619048,   0.41666667,   0.44444444]),
	 2: array([ 15.        ,   0.47619048,   0.41666667,   0.44444444]),
	 3: array([ 18.        ,   0.47619048,   0.41666667,   0.44444444]),
	 4: array([ 22.        ,   0.47619048,   0.41666667,   0.44444444]),
	 5: array([ 26.        ,   0.47619048,   0.41666667,   0.44444444]),
	 6: array([ 30.        ,   0.47619048,   0.41666667,   0.44444444]),
	 7: array([ 33.        ,   0.47619048,   0.41666667,   0.44444444]),
	 8: array([ 37.        ,   0.47619048,   0.41666667,   0.44444444]),
	 9: array([ 41.        ,   0.47619048,   0.41666667,   0.44444444]),
	 10: array([ 45.        ,   0.47619048,   0.41666667,   0.44444444]),
	 11: array([ 48.        ,   0.47619048,   0.41666667,   0.44444444]),
	 12: array([ 52.        ,   0.47619048,   0.41666667,   0.44444444]),
	 13: array([ 56.        ,   0.47619048,   0.41666667,   0.44444444]),
	 14: array([ 60.        ,   0.47619048,   0.41666667,   0.44444444]),
	 15: array([ 63.        ,   0.47619048,   0.41666667,   0.44444444])}
